security:
    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        fos_userbundle:
            #fos_user.user_provider.username_email - to log in also with email
            id: fos_user.user_provider.username 
            
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api_login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            form_login:
                check_path:               /api/login_check
                require_previous_session: false
                username_parameter:       username
                password_parameter:       password
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure

        api_register:
            pattern: ^/api/register
            anonymous: true

        api_password_reset:
            pattern: ^/api/password/reset
            anonymous: true

        api:
            pattern:   ^/api
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

    access_control:                
        - { path: ^/api/login, role: IS_AUTHENTICATED_ANONYMOUSLY }        
        - { path: ^/api/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/password/reset, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/admin/, role: ROLE_ADMIN }
        - { path: ^/api, role: IS_AUTHENTICATED_FULLY }

